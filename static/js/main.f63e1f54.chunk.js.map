{"version":3,"sources":["app/data/recipes.ts","app/services/recipe-service.ts","app/pages/home.tsx","app/pages/recipe.tsx","app/components/multi-line-input.tsx","app/pages/recipe-generator.tsx","app/pages/page-not-found.tsx","icons/home.svg","icons/edit-doc.svg","icons/thermometer.svg","app/components/nav-bar.tsx","app/pages/useful-charts.tsx","app/App.tsx","app/reportWebVitals.ts","index.tsx"],"names":["allRecipes","getAllRecipes","Home","className","map","recipe","to","name","IngredientsDisplay","props","ingredients","ingredient","MethodDisplay","method","step","RecipeDisplay","href","url","MultiLineInput","label","state","setState","i","value","onChange","e","lineIndex","newState","target","updateLine","autoFocus","onClick","splice","data-testid","newData","RecipeGenerator","useState","recipeName","setRecipeName","setUrl","setIngredients","steps","setSteps","json","setJson","generateJson","filter","entry","trim","length","JSON","stringify","navigator","clipboard","writeText","PageNotFound","NavBar","src","homeIcon","alt","editIcon","thermometerIcon","UsefulCharts","set","index","App","redirect","sessionStorage","location","history","replaceState","process","basename","exact","path","render","matchingRecipe","toLowerCase","getRecipe","match","params","recipeId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f63e1f54.chunk.js","sourcesContent":["import { Recipe } from \"app/models/recipe\";\n\n/* eslint-disable max-len */\n\nexport const allRecipes: Recipe[] = [\n    {\"name\":\"Katsu Curry Sauce\",\"url\":\"http://allrecipes.co.uk/recipe/29578/chicken-katsu-curry.aspx\",\"ingredients\":[\"3 onions\",\"7 garlic cloves\",\"3 carrots\",\"3 tbsp plain flour\",\"2 tbsp curry powder\",\"900ml veg stock\",\"1 tbsp honey\",\"2 tbsp soy sauce\",\"1 bay leaf\",\"1 tsp garam masala\"],\"method\":[\"Fry the onions and garlic until soft\",\"Add carrots and cook until soft (approx 10 mins)\",\"Add flour and curry powder, cook for 1 minute\",\"Add stock gradually, then add honey, soy sauce and bay leaf\",\"Bring to the boil, then reduce to a simmer until sauce is thick but can be poured - around 20 mins\",\"Stir in garam masala. Serve with breaded vegetables or tofu & rice\"]},\n    {\"name\":\"Chilli\",\"url\":\"https://www.bbcgoodfood.com/recipes/burnt-aubergine-veggie-chilli\",\"ingredients\":[\"3 aubergines\",\"1 red onion, diced\",\"2 carrots, diced\",\"70g green lentils\",\"30g red lentils\",\"2 400g can kidney beans\",\"400g can chopped tomatoes\",\"3 tbsp soy sauce\",\"20g dark chocolate, finely chopped\",\"1 tsp chilli powder\",\"2 tsp dried oregano\",\"2 tsp ground cumin\",\"2 tsp paprika\",\"1 tsp ground coriander\",\"1 tsp garam masala\",\"400ml veg stock - double concentration\",\"half a lime, juiced\"],\"method\":[\"Grill or roast the aubergine in small chunks\",\"Fry onion & carrot with salt in large pan for 15-20 mins until softened\",\"Add the aubergine, lentils, beans (including liquid), tomatoes, soy sauce, chocolate, spices and herbs\",\"Stir and pour in the stock\",\"Bring to the boil then turn down heat low\",\"Cover with a lid and simmer for 1.5 hours, stirring occasionally\",\"Remove lid and let simmer for 15 mins\",\"Add lime juice, and serve over rice or roasted sweet potato\"]},\n    {\"name\":\"Dal Makhani\",\"url\":\"https://cookieandkate.com/quick-dal-makhani-recipe/\",\"ingredients\":[\"2 onions diced\",\"6 garlic clove minced\",\"2 tbsp ginger, finely chopped\",\"2 chillis, finely chopped\",\"3 tsp garam masala\",\"1 tsp ground cumin\",\"1 tsp ground coriander\",\"1 tsp salt\",\"2 cans chopped tomatoes\",\"400g black lentils\",\"2 cans kidney beans, rinsed and drained\",\"8 cups water\",\"1 bay leaf\",\"2 tbsp lime juice\",\"Optional: can of coconut milk\"],\"method\":[\"Fry the onion, garlic, ginger and chillis until softened\",\"Stir in the spices, and season generously with black pepper. Cook while stirring for 1 minute\",\"Add the tomatoes and cook for 1 more minute\",\"Add the lentils, beans, water and bay leaf\",\"Bring the mixture to a boil, and then reduce the heat to a simmer until the lentils are tender; about 35 mins\",\"Remove the bay leaf, and transfer 2 cups of the mixture to a blender and blend until smooth\",\"Combine the blended mixture with the remainder, add the lime juice and add salt to taste\",\"Optionally, add in coconut milk, and then serve with rice or naan\"]},\n    {\"name\":\"Bibimbap\",\"url\":\"https://www.lazycatkitchen.com/vegan-bibimbap/\",\"ingredients\":[\"450g tofu\",\"5 tbsp soy sauce\",\"4 tbsp gochujang\",\"200g mushrooms\",\"100g spinach\",\"1 carrot\",\"50g edamame beans\",\"1/2 cucumber\",\"4 tsp rice wine vinegar\",\"2 tbsp golden syrup\",\"1 garlic clove\"],\"method\":[\"Cut tofu into small cubes\",\"Marinate it in a small pan with 1 tbsp gochujang and 3 tbsp soy sauce for 30 mins - turning at least once halfway through\",\"Bake the tofu once marinated, at gas 4, for 25 mins\",\"For the dressing; whisk together 3 tbsp gochujang, 2 tbsp soy sauce, 2 tbsp oil, the rice wine vinegar, syrup and finely minced garlic\",\"Grate the carrot and finely slice the cucumer\",\"Fry the mushrooms, adding salt and pepper once cooked\",\"Wilt the spinach once the mushrooms have been removed, with a splash of water\",\"Serve the toppings over rice, and top with the dressing\"]},\n    {\"name\":\"Aubergine Stew\",\"url\":\"https://www.hellofresh.co.uk/recipes/almond-aubergine-stew-wk44-59b02344043c3c025166e5c2\",\"ingredients\":[\"500ml veg stock\",\"4 garlic cloves, chopped\",\"2 red onions, diced\",\"2 leeks, chopped\",\"250g couscous\",\"2-3 aubergines\",\"2 tbsp tomato puree\",\"600g passata\",\"60g green olives, roughly chopped\",\"4 tbsp ground almonds\",\"fresh basil leaves\",\"1 tbsp lemon juice\",\"Optional: Can of chickpeas\"],\"method\":[\"Chop up the aubergine, and roast in olive oil at gas mark 6 until soft; around 35-40 mins\",\"Fry the onion, leek and garlic until soft, about 7 mins\",\"Stir in the passata & tomato puree, and optionally blend the sauce\",\"Add the chickpeas if you are using them\",\"Cook on medium-low heat for 10 mins to thicken the sauce\",\"Add the olives, almond, aubergine with some salt & pepper\",\"Cook the couscous with the veg stock, and once ready pour over the lemon juice\",\"Split the basil between the couscous and the stew, combine & serve\"]}\n];","import { allRecipes } from \"app/data/recipes\";\nimport { Recipe } from \"app/models/recipe\";\n\nexport const getAllRecipes = (): Recipe[] => {\n    return allRecipes;\n};\n\nexport const getRecipe = (name: string): Recipe | null => {\n    const matchingRecipe = getAllRecipes().filter((recipe) =>\n        recipe.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (matchingRecipe.length > 0) {\n        return matchingRecipe[0];\n    }\n\n    return null;\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllRecipes } from 'app/services/recipe-service';\n\n\nconst Home: React.FC = () => {\n    const allRecipes = getAllRecipes();\n\n    return (\n        <div className=\"app-page\">\n            <h1>Recipes</h1>\n            {\n                allRecipes.map((recipe) => {\n                    return <Link\n                        className=\"recipe-link\"\n                        key={recipe.name}\n                        to={`/recipe/${recipe.name}`}\n                    >\n                        {recipe.name}\n                    </Link>;\n                })\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import { Recipe } from 'app/models/recipe';\nimport React from 'react';\nimport 'app/pages/Recipes.scss';\n\ntype RecipeProps = {\n    recipe: Recipe;\n};\n\ntype IngredientsProps = {\n    ingredients?: string[];\n}\n\ntype MethodProps = {\n    method?: string[];\n}\n\nconst IngredientsDisplay: React.FC<IngredientsProps> = (props: {ingredients?: string[]}) => {\n    if (!props.ingredients) {\n        return null;\n    }\n    return <>\n        <h2>Ingredients</h2>\n        <ul>\n            {\n                props.ingredients.map((ingredient) => {\n                    return <li key={ingredient}>{ingredient}</li>\n                })\n            }\n        </ul>\n    </>;\n};\n\nconst MethodDisplay: React.FC<MethodProps> = (props: {method?: string[]}) => {\n    if (!props.method) {\n        return null;\n    }\n    return <>\n        <h2>Method</h2>\n        <ul>\n            {\n                props.method.map((step) => {\n                    return <li key={step}>{step}</li>\n                })\n            }\n        </ul>\n    </>;\n};\n\nconst RecipeDisplay: React.FC<RecipeProps> = (props: RecipeProps) => {\n    const recipe = props.recipe;\n\n    return (\n        <div className=\"app-page\">\n            <div className=\"recipe\">\n                <h1 className=\"recipe-title\">{recipe.name}</h1>\n                <a href={recipe.url} className=\"recessive-link\">Click for original recipe</a>\n                <IngredientsDisplay ingredients={recipe.ingredients} />\n                <MethodDisplay method={recipe.method} />\n            </div>\n        </div>\n    );\n}\n\nexport default RecipeDisplay;\n","import React from 'react';\n\ntype MultiLineInputProps = {\n    label: string;\n    state: string[];\n    setState: (newState: string[]) => void;\n};\n\nconst MultiLineInput: React.FC<MultiLineInputProps> = (props: MultiLineInputProps) => {\n    const {label, state, setState} = props;\n    const addLine = () => {\n        const newData = [...state, \"\"];\n        setState(newData);\n    };\n    const updateLine = (lineIndex: number, e: React.ChangeEvent<HTMLInputElement>) => {\n        const newState = [...state];\n        newState[lineIndex] = e.target.value;\n        setState(newState);\n    };\n    const deleteLine = (lineIndex: number) => {\n        state.splice(lineIndex, 1);\n        setState([...state]);\n    };\n\n    return <>\n        <label>{label}</label>\n        {\n            state.map((step, i) => {\n                return <div key={i}>\n                    <input value={step} onChange={(e) => updateLine(i, e)} autoFocus/>\n                    <button\n                        className=\"small-action-button\"\n                        onClick={() => deleteLine(i)}\n                        data-testid=\"delete\"\n                    >\n                        -\n                    </button>\n                </div>;\n            })\n        }\n        <button onClick={addLine} className=\"small-action-button\" data-testid=\"add\">+</button>\n    </>;\n};\n\nexport default MultiLineInput;","import React, {useState} from 'react';\nimport { Recipe } from 'app/models/recipe';\nimport MultiLineInput from 'app/components/multi-line-input';\n\nconst RecipeGenerator: React.FC = () => {\n    const [recipeName, setRecipeName] = useState<string>(\"\");\n    const [url, setUrl] = useState<string>(\"\");\n    const [ingredients, setIngredients] = useState<string[]>([]);\n    const [steps, setSteps] = useState<string[]>([]);\n    const [json, setJson] = useState<string>(\"\");\n    const updateRecipe = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setRecipeName(e.target.value);\n    };\n    const updateUrl = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUrl(e.target.value);\n    };\n    const generateJson = () => {\n        const recipe: Recipe = {\n            name: recipeName,\n            url: url,\n            ingredients: ingredients.filter((entry) => entry.trim().length > 0),\n            method: steps.filter((entry) => entry.trim().length > 0)\n        };\n        return JSON.stringify(recipe);\n    };\n    const displayJson = () => {\n        setJson(generateJson());\n    }\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(generateJson());\n    };\n\n    return <div className=\"app-page\">\n        <label>Name</label>\n        <input value={recipeName} onChange={updateRecipe}></input>\n        <label>URL</label>\n        <input value={url} onChange={updateUrl}></input>\n        <MultiLineInput label=\"Ingredients\" state={ingredients} setState={setIngredients}/>\n        <MultiLineInput label=\"Method\" state={steps} setState={setSteps}/>\n        <div>\n            <button className=\"action-button\" onClick={displayJson}>Display JSON</button>\n            <button className=\"action-button\" onClick={copyToClipboard}>Copy to clipboard</button>\n        </div>\n        <div>\n            {json}\n        </div>\n    </div>;\n};\n\nexport default RecipeGenerator;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst PageNotFound: React.FC = () => {\n    return (\n        <div className=\"app-page\">\n            <h1>404</h1>\n            <p>Hmm, looks like that page wasn't found. Return to the homepage?</p>\n            <Link className=\"home-link\" to={\"/\"}>Home</Link>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","export default __webpack_public_path__ + \"static/media/home.6660b146.svg\";","export default __webpack_public_path__ + \"static/media/edit-doc.7f53e506.svg\";","export default __webpack_public_path__ + \"static/media/thermometer.41308725.svg\";","import React from 'react';\nimport homeIcon from 'icons/home.svg';\nimport editIcon from 'icons/edit-doc.svg';\nimport thermometerIcon from 'icons/thermometer.svg';\nimport {Link} from 'react-router-dom';\nimport 'app/components/nav-bar.scss';\n\nconst NavBar: React.FC = () => {\n    return <div className=\"nav-bar\">\n        <Link to=\"/\">\n            <img src={homeIcon} className=\"icon\" alt=\"Home icon\" />\n        </Link>\n        <Link to=\"/recipe-generator\">\n            <img src={editIcon} className=\"icon\" alt=\"Edit icon\" />\n        </Link>\n        <Link to=\"/useful-charts\">\n            <img src={thermometerIcon} className=\"icon\" alt=\"Thermometer icon\" />\n        </Link>\n    </div>\n};\n\nexport default NavBar;","import React from 'react';\nimport 'app/pages/Tables.scss';\n\nconst UsefulCharts: React.FC = () => {\n    const gasToDegrees = [\n        [1, 140, 275],\n        [2, 150, 300],\n        [3, 165, 325],\n        [4, 180, 350],\n        [5, 190, 375],\n        [6, 200, 400],\n        [7, 220, 425],\n        [8, 230, 450],\n        [9, 245, 475]\n    ];\n\n    return <div className=\"app-page\">\n        <table>\n            <tr>\n                <th>Gas Mark</th>\n                <th>C°</th>\n                <th>C° (fan)</th>\n                <th>F°</th>\n            </tr>\n            {gasToDegrees.map((set, index) => {\n                return <tr key={index}>\n                    <td>{set[0]}</td>\n                    <td>{set[1]}</td>\n                    <td>{set[1] - 20}</td>\n                    <td>{set[2]}</td>\n                </tr>\n            })}\n        </table>\n    </div>\n};\n\nexport default UsefulCharts;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Home from 'app/pages/home';\nimport RecipeDisplay from 'app/pages/recipe';\nimport { getRecipe } from './services/recipe-service';\nimport RecipeGenerator from './pages/recipe-generator';\nimport PageNotFound from './pages/page-not-found';\nimport NavBar from './components/nav-bar';\nimport UsefulCharts from './pages/useful-charts';\nimport 'styles/Pages.scss';\n\nconst App: React.FC = () => {\n    const redirect = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n    if (redirect && redirect != location.href) {\n        history.replaceState(null, process.env.REACT_APP_BASE_URL || '', redirect);\n    }\n\n    return (\n        <Router basename={process.env.REACT_APP_BASE_URL}>\n            <NavBar />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route path=\"/recipe/:recipeId\" render={(props)=>{\n                    const recipe = getRecipe(props.match.params.recipeId);\n                    if (!recipe) {\n                        return <PageNotFound />;\n                    }\n\n                    return <RecipeDisplay recipe={recipe}/>}\n                } />\n                <Route path=\"/recipe-generator\">\n                    <RecipeGenerator />\n                </Route>\n                <Route path=\"/useful-charts\">\n                    <UsefulCharts />\n                </Route>\n                <Route>\n                    <PageNotFound />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals: () => void = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'app/App';\nimport reportWebVitals from 'app/reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}